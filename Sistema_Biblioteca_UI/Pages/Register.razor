@page "/register"

@using Sistema_Biblioteca.Services
@using System.ComponentModel.DataAnnotations

@inject ILoginService LoginService
@inject NavigationManager Navigation
@inject SweetAlertService Swal


<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Crea tu cuenta</h3>
                    <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="username" class="form-label">Usuario</label>
                            <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
                            <ValidationMessage For="@(() => registerModel.Username)" />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Contraseña</label>
                            <InputText id="password" type="text" class="form-control" @bind-Value="registerModel.Password" />
                            <ValidationMessage For="@(() => registerModel.Password)" />
                        </div>
                        <div class="mb-3">
                            <label for="role" class="form-label">Rol</label>
                            <InputSelect id="role" class="form-control" @bind-Value="registerModel.Role">
                                <option value="">Selecciona un rol</option>
                                <option value="Admin">Admin</option>
                                <option value="User">User</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => registerModel.Role)" />
                        </div>
                        <button type="submit" class="btn btn-primary">Registrarse</button>
                        <a class="btn btn-warning" href="login">Volver</a>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleRegister()
    {
        var error = await LoginService.Register(registerModel);

        if (string.IsNullOrEmpty(error))
        {
            await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "¡Excelente!",
                    Text = "Usuario registrado correctamente.",
                    Icon = SweetAlertIcon.Success
                });
            Navigation.NavigateTo("/login");
        }
        else
        {
            await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "¡Upps!",
                    Text = error,
                    Icon = SweetAlertIcon.Error
                });
        }
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "El usuario es obligatorio.")]
        public string Username { get; set; }
        [Required(ErrorMessage = "La contraseña es obligatoria.")]
        public string Password { get; set; }
        [Required(ErrorMessage = "El rol es obligatorio.")]
        public string Role { get; set; }
    }
}
